<?php
    // Initialize from current search (if available and not explicitly overridden) or defaults:
    if ($results = ($this->results ?? $this->searchMemory()->getCurrentSearch())) {
      $params = $results->getParams();
      $this->searchClassId = $params->getSearchClassId();
    } else {
      $params = null;
      $this->searchClassId ??= $this->config()->get('config')->Site->defaultSearchBackend
        ?? 'Solr';
    }
    // Initialize from current search if eligible, defaults otherwise:
    if (isset($params) && $this->searchClassId === $params->getSearchClassId()) {
      $hiddenFilters = $params->getHiddenFilters();
      $lastSort = $params->getSort();
      $lastLimit = $params->getLimit();
      $options = $params->getOptions();
    } else {
      $hiddenFilters = $this->searchTabs()->getHiddenFilters($this->searchClassId, true, $this->ignoreHiddenFiltersInRequest ?? false);
      $lastSort = $this->searchMemory()->getLastSort($this->searchClassId);
      $lastLimit = $this->searchMemory()->getLastLimit($this->searchClassId);
      $options = $this->searchOptions($this->searchClassId);
    }
    // Override search class ID with searchbox-specific settings, if necessary:
    $overrideSearchClassId = $options->getSearchBoxSearchClassId();
    if ($overrideSearchClassId !== $this->searchClassId) {
      $this->searchClassId = $overrideSearchClassId;
      $options = $this->searchOptions($overrideSearchClassId);
    }

    // Load search actions and settings (if any):
    $handlers = $this->searchbox()->getHandlers(
        $this->searchClassId,
        $this->searchIndex ?? null
    );
    $handlerCount = count($handlers);
    $basicSearch = $this->searchbox()->combinedHandlersActive() ? 'combined-searchbox' : $options->getSearchAction();
    $searchHome = $options->getSearchHomeAction();
    $advSearch = $options->getAdvancedSearchAction();

    if (!isset($this->filterList) || !isset($this->checkboxFilters)) {
        $params ??= $this->searchMemory()->getLastSearchParams($this->searchClassId);
        $filterList = $params->getFilterList(true);
        $checkboxFilters = $params->getCheckboxFacets();
    } else {
        $filterList = is_array($this->filterList) ? $this->filterList : [];
        $checkboxFilters = is_array($this->checkboxFilters) ? $this->checkboxFilters : [];
    }
    $filterDetails = $this->searchbox()->getFilterDetails($filterList, $checkboxFilters);
    $showFilters = $filterDetails && ($results || $options->getRetainFilterSetting());
?>
<?php $tabConfig = $this->searchTabs()->getTabConfig($this->searchClassId, $this->lookfor, $this->searchIndex, $this->searchType, $hiddenFilters); ?>
<?php if ($this->searchType == 'advanced'): ?>
  <div class="navbar-form navbar-left flip">
    <?php $tabs = $this->context($this)->renderInContext('search/searchTabs', ['searchTabs' => $tabConfig['tabs'], 'showCounts' => false]); ?>
    <?php if (!empty($tabs)): ?><?=$tabs ?><div class="tab-content clearfix"><?php endif; ?>
      <p class="adv_search_links">
        <a href="<?=$this->url($advSearch)?>?edit=<?=$this->escapeHtmlAttr($this->searchId)?>"><?=$this->transEsc('Edit this Advanced Search')?></a> |
        <a href="<?=$this->url($advSearch, [], ['query' => $hiddenFilters])?>"><?=$this->transEsc('Start a new Advanced Search')?></a> |
        <a href="<?=$this->url($searchHome, [], ['query' => $hiddenFilters])?>"><?=$this->transEsc('Start a new Basic Search')?></a>
      </p>
      <?=
        $this->context($this)->renderInContext(
            'search/filters.phtml',
            [
              'params' => $params ?? null,
              'urlQuery' => isset($results) ? $results->getUrlQuery() : null,
              'filterList' => $showFilters ? $filterList : [],
              'checkboxFilters' => $showFilters ? $checkboxFilters : [],
              'searchClassId' => $this->searchClassId,
              'searchType' => $this->searchType,
            ]
        );
      ?>
    <?php if (!empty($tabs)): ?></div><?php endif; ?>
  </div>
<?php else: ?>
  <form id="searchForm" class="searchForm navbar-form navbar-left flip" method="get" action="<?=$this->url($basicSearch)?>" name="searchForm" autocomplete="off">
    <?= $this->context($this)->renderInContext('search/searchTabs', ['searchTabs' => $tabConfig['tabs'], 'showCounts' => $tabConfig['showCounts']]); ?>
    <?php
      $searchboxAttributes = [
        'id' => 'searchForm_lookfor',
        'class' => 'searchForm_lookfor form-control search-query',
        'type' => 'search',
        'name' => 'lookfor',
        'value' => $this->lookfor,
        'aria-label' => $this->translate('search_terms'),
      ];
      if ($placeholder = $this->searchbox()->getPlaceholderText($tabConfig['selected']['id'] ?? $this->searchClassId)) {
        $searchboxAttributes['placeholder'] = $this->translate($placeholder);
      }
      if ($this->searchbox()->autocompleteEnabled($this->searchClassId)) {
        $searchboxAttributes['class'] .= " autocomplete searcher:{$this->searchClassId}"
          . ($this->searchbox()->autocompleteAutoSubmit($this->searchClassId) ? ' ac-auto-submit' : '');
        $searchboxAttributes['data-autocomplete-formatting-rules'] = $this->searchbox()->autocompleteFormattingRulesJson($this->searchClassId);
      }
    ?>
    <?php if ($handlerCount > 1): ?>
      <label for="searchForm_type">Search&nbsp;</label> <!-- msul class for spacing -->
      <select id="searchForm_type" class="searchForm_type form-control" name="type" data-native-menu="false" aria-label="<?=$this->transEscAttr('Search type')?>">
        <?php $currentGroup = $insideGroup = false; ?>
        <?php foreach ($handlers as $handler): ?>
          <?php
            if ($currentGroup !== ($handler['group'] ?? false)) {
              $currentGroup = $handler['group'];
              if ($insideGroup) {
                echo '</optgroup>';
              }
              if ($currentGroup) {
                echo '<optgroup label="' . $this->escapeHtmlAttr($currentGroup) . '">';
                $insideGroup = true;
              } else {
                $insideGroup = false;
              }
            }
          ?>
          <option value="<?=$this->escapeHtmlAttr($handler['value'])?>"<?=$handler['selected'] ? ' selected="selected"' : ''?>><?=$handler['indent'] ? '-- ' : ''?><?=$this->transEsc($handler['label'])?></option>
        <?php endforeach; ?>
        <?php if ($insideGroup): ?>
          </optgroup>
        <?php endif; ?>
      </select>
      <label for="searchForm_lookfor">&nbsp;for&nbsp;</label>
    <div class="searchForm-query">
      <input<?=$this->htmlAttributes($searchboxAttributes)?>>
      <button id="searchForm-reset" class="searchForm-reset hidden" type="reset" tabindex="-1" aria-label="<?=$this->transEsc('searchform_reset_button')?>"><?=$this->icon('ui-reset-search');?></button>
      <a href="/Help/Home?topic=search&amp;_=1716862211" data-lightbox="" class="help-link">
        <button type="button" class="search-tips-icon" title="Search Tips" aria-label="Search Tips"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="16" x2="12" y2="12"></line><line x1="12" y1="8" x2="12.01" y2="8"></line></svg></button>
      </a> <!-- msul add info icon for search bar at desktop -->
    </div>
    <?php elseif ($handlerCount == 1): ?>
      <input type="hidden" name="type" value="<?=$this->escapeHtmlAttr($handlers[0]['value'])?>">
    <?php endif; ?>
    <button type="submit" class="btn btn-primary"><?=$this->icon('search') ?> <?=$this->transEsc('Search')?></button>
    <?php if ($advSearch): ?>
      <?php
        $advSearchQuery = $results ? ['edit' => $results->getSearchId()] : $hiddenFilters;
        $advSearchLink = $this->url($advSearch, [], ['query' => $advSearchQuery]);
      ?>
      <a href="<?=$advSearchLink?>" class="advanced-search-link btn btn-link" rel="nofollow"><?=$this->transEsc('Advanced')?></a>
    <?php endif; ?>
    <a class="search-tips-mobile" href="/Help/Home?topic=search&amp;_=1716862211">Search Tips</a> <!-- msul added search tips link for mobile -->
    <?php if ($geoUrl = $this->geocoords()->getSearchUrl($options)) : ?>
        <a href="<?=$geoUrl ?>" class="btn btn-link"><?=$this->transEsc('Geographic Search')?></a>
    <?php endif; ?>

    <?php $shards = $options->getShards(); ?>
    <?php if ($options->showShardCheckboxes() && !empty($shards)): ?>
      <?php
      $selectedShards = $this->selectedShards ?? $options->getDefaultSelectedShards();
      ?>
      <br>
      <?php foreach ($shards as $shard => $val): ?>
        <?php $isSelected = empty($selectedShards) || in_array($shard, $selectedShards); ?>
          <input type="checkbox" <?=$isSelected ? 'checked="checked" ' : ''?>name="shard[]" value='<?=$this->escapeHtmlAttr($shard)?>'> <?=$this->transEsc($shard)?>
      <?php endforeach; ?>
    <?php endif; ?>
    <?php if (($hasDefaultsApplied ?? false) || !empty($filterDetails)): ?>
      <?php if ($options->getRetainFilterSetting()): ?>
        <?php foreach ($filterDetails as $current): ?>
          <input class="applied-filter" id="<?=$this->escapeHtmlAttr($current['id'])?>" type="hidden" name="filter[]" value="<?=$this->escapeHtmlAttr($current['value'])?>">
        <?php endforeach; ?>
        <?php if ($hasDefaultsApplied ?? false): ?>
          <input class="applied-filter" id="dfApplied" type="hidden" name="dfApplied" value="1">
        <?php endif; ?>
      <?php endif; ?>
    <?php endif; ?>
    <?php foreach ($hiddenFilters as $key => $filter): ?>
      <?php foreach ($filter as $value): ?>
        <input type="hidden" name="hiddenFilters[]" value="<?=$this->escapeHtmlAttr($key) . ':' . $this->escapeHtmlAttr('"' . $value . '"')?>">
      <?php endforeach; ?>
    <?php endforeach; ?>
    <?php
      /* Show hidden field for active search class when in combined handler mode. */
      if ($this->searchbox()->combinedHandlersActive()) {
        echo '<input type="hidden" name="activeSearchClassId" value="' . $this->escapeHtmlAttr($this->searchClassId) . '">';
      }
      /* Load hidden limit preference from Session */
      if (!empty($lastLimit)) {
        echo '<input type="hidden" name="limit" value="' . $this->escapeHtmlAttr($lastLimit) . '">';
      }
      if (!empty($lastSort) && $lastSort !== $params?->getDefaultSort()) {
        echo '<input type="hidden" name="sort" value="' . $this->escapeHtmlAttr($lastSort) . '">';
      }
    ?>
    <?=$this->context($this)->renderInContext(
        'search/filters.phtml',
        [
          'params' => $params ?? null,
          'urlQuery' => isset($results) ? $results->getUrlQuery() : null,
          'filterList' => $showFilters ? $filterList : [],
          'checkboxFilters' => $showFilters ? $checkboxFilters : [],
          'searchClassId' => $this->searchClassId,
          'searchType' => $this->searchType,
        ]
    );?>
  </form>
<?php endif; ?>
