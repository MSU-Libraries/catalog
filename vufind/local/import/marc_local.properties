###############################################################################
# marc_local.properties -- local overrides to standard VuFind MARC mappings.  #
#                          All settings in this file override equivalent      #
#                          settings in marc.properties.                       #
###############################################################################

# Instance HRID with prefix
id = 001, (pattern_map.id_prefix), first
pattern_map.id_prefix.pattern_0 = (ebs.+)=>hlm.$1
pattern_map.id_prefix.pattern_1 = (.+)=>folio.$1

# Instance UUID
uuid_str = 999i, first

#collection = "Catalog"
institution = custom, getStaticDefaultStr("952", "b", "Michigan State University")

building = custom, getLocations

# VuFind stores MARC records in JSON format, but you can instead choose either
# binary or XML format by uncommenting one of the lines below. Using binary MARC
# is not recommended if you have any records which exceed the 99,999 byte limit
# imposed by that encoding.
#fullrecord = FullRecordAsMarc
#fullrecord = FullRecordAsXML

# Uncomment the following lines to track history of indexing times for RSS feeds,
# OAI-PMH server and other updates.  The parameter to these functions must be the
# same fieldspec as the id setting above!
# IMPORTANT: Indexing this extra information will make extra database calls during
#            the indexing process and will likely slow things down significantly.
first_indexed = custom, getFirstIndexed(001)
last_indexed = custom, getLastIndexed(001)

# Uncomment the following line to index full text from URLs found in your MARC
# records.  All sorts of document formats are supported (PDF, Word Doc, ASCII
# text, HTML, etc.) The first parameter is a fieldspec showing which fields to use
# for URL retrieval.  The second parameter is optional -- if included, only files
# matching the specified suffix will be indexed.  Note that this functionality
# depends on a full text tool being installed on your system.  See the wiki for
# details:
#       https://vufind.org/wiki/indexing:full_text_tools
#fulltext = custom, getFulltext(856u, pdf)

# Uncomment the following if you want to use the OpenLayers3 Geographic Search
# and OpenLayers3 Geo-Display functionality
# See searches.ini for configuration options for Geographic Searching.
# See config.ini for configuration options for Geo-Display.
#long_lat = custom, getAllCoordinates
#long_lat_display = custom, getDisplayCoordinates
#long_lat_label = 034z

# Uncomment the following lines if you are indexing journal article data that uses
# the 773 field to describe the journal containing the article.  These settings
# assume the records have been formatted according to recommendation 4.1 found at:
#     http://www.loc.gov/marc/marbi/2003/2003-dp01.html
# If you have records using a different 773 format, you may need to write a custom
# indexing script to parse out volume/issue/number.
# Additionally, you will need to make sure articles have a format value of "Article."
# If all of your records are articles, you can hard-code this using:
#format = "Article"
# ...but if you need to distinguish between articles and non-articles, you will need
# to build a custom getFormat routine.
#container_volume = 773v
#container_issue = 773l
#container_start_page = 773q
#container_reference = 773g
#container_title = 773s

# Uncomment the following line to use the legacy "single best value" format
# determination in place of the default "multiple formats" approach.
#format = custom, getFormat, format_map.properties

# Uncomment the following lines to use a hierarchical facet for formats. Note that
# the facet needs to be set hierarchical also in facets.ini like this:
#   [SpecialFacets]
#   hierarchical[] = format
# Note also that if you need to customize the mappings, you will have to modify them
# for all the levels used.
#format = custom, getFormats, format_map_level0.properties, unique
#format += custom, getFormats, format_map_level1.properties, unique

# Uncomment and modify the following line to customize the creation of work keys
# used to identify different record versions. The example below includes the
# Finnish/Swedish characters in the list of characters to keep.
#
# Parameters:
#   uniform title fields (field spec)
#   title fields (field spec)
#   title fields with non-filing characters removed (field spec)
#   author fields (field spec)
#   characters to include (regex)
#   characters to exclude (regex)
#   transliterations
#
# See
# https://unicode-org.github.io/icu/userguide/transforms/general/#icu-transliterators
# for more information on the transliteration rules.
#work_keys_str_mv = custom, getWorkKeys(130anp:730anp, 240anpmr:245abn:246abn:247abn, 240anpmr:245abn, 100ab:110ab:111ac:700ab:710ab:711ac, "", "", ":: NFD; :: lower; a\U00000308>AE; o\U00000308>OE; a\U0000030A>AA; :: Latin; :: [:Nonspacing Mark:] Remove; :: [:Punctuation:] Remove; :: [:Whitespace:] Remove; :: NFKC; AE>ä; OE>ö; AA>å")


# Trim the slash at the end of title
title = 245anbp, (pattern_map.title), first
pattern_map.title.pattern_0 = (.*)\s?\/$=>$1
pattern_map.title.pattern_1 = keepRaw

# Updated to include vernacular linked titles
title_alt = 100t:130adfgklnpst:240a:246abnp:505t:700t:710t:711t:730adfgklnpst:740a:LNK245anbp

# Using only the call numbers from the effective location extracted from FOLIO in 952e,
# and only if the holdings are not suppressed (952t == 0)
callnumber-first = 952e[0] ? ($t == 0), callnumber_map.properties, first
callnumber-subject = custom, getCallNumberSubject(952e ? ($t == 0)), callnumber_subject_map.properties
callnumber-label = custom, getCallNumberLabel(952e ? ($t == 0))
callnumber-sort = custom, getLCSortable(952e ? ($t == 0))
callnumber-raw = 952e ? ($t == 0)
callnumber-full_str_mv = 952fe ? ($t == 0), format("$f $e")
callnumber-prefix_str_mv = 952f ? ($t == 0)

# Custom topic rule
# Note: getAllSubfields is useless if a space is used to concatenate values
topic = {600[a-z3-8]:610[a-z3-8]:611[a-z3-8]:630[a-z3-8]:650[a-z3-8]:651[a-z3-8]} ? (ind2 = 0 || ind2 = 2 || ind2 == 4 || (ind2 == 7 && $2 matches "homoit")) : {655[a-z3-8]} ? (ind2 = 0 || ind2 = 4 || (ind2 == 7 && $2 matches "lcgft|aat|local|gsafd|tgm|olacvggt|vgmsgg|discogsgenre|discogsstyle|rbgenr|rbbin|rbpap|rbpri|rbprov|rbtyp|rbmscv"))

# This should be 1/true if an instance needs to be hidden
# We don't filter out these instances so that we can update suppress values when they change
# There might be several 999t, and possibly non-boolean values, so we need to filter values
suppress-from-discovery_boolean = custom, getSuppress

# This is temporary, to obtain stats about call number types
# callnumber-type_str_mv = 952h

# Legacy Sierra BibNumber
bibnum_str = 907y, first

# Avoid URL duplicates
url = 856u:555u, unique

material-type_str_mv = custom, getMaterialType

# Publisher facet (see https://vufind.org/wiki/development:architecture:solr_index_schema#dynamic_field_suffixes)
publisher_txtF_mv = custom, getPublishersFacets

# Publisher to include transliterated values from 880
publisher = custom, getTransliteratedPublishers

# Publish date to include transliterated values from 880
dateSpan = 362a:LNK362a
