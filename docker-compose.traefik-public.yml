---
version: "3.8"

services:
  traefik:
    image: traefik:v2.6
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik:/etc/traefik
    networks:
      - public
    ports:
      - target: 80
        published: 80
        protocol: tcp
      - target: 443
        published: 443
        protocol: tcp
    command:
      - "--providers.docker"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=public"
      - >
        --providers.docker.defaultRule=
        {{- $namespace_list := index .Labels "com.docker.stack.namespace" | splitList "-" -}}
        {{- $stackname_list := slice $namespace_list 0 (sub (len $namespace_list) 2) -}}
        {{- $stackname := join "-" $stackname_list -}}
        {{- $servicename := last $namespace_list -}}
        {{- $pathmatch := "/" -}}
        {{- if eq $servicename "solr" -}}
            {{- $pathmatch := "/solr" --}
        {{- end -}}
        Host(`{{ $stackname }}.aws.lib.msu.edu`)
          && PathPrefix(`{{ $pathmatch }}`)
      - "--entrypoints.msul-http-ent.address=:80"
      - "--entrypoints.msul-https-ent.address=:443"
      - "--log"
      - "--log.level=INFO"
      - "--accesslog"
      - "--api.dashboard=true"
      - "--entrypoints.health-ent.address=127.0.0.1:8081"
      - "--ping"
      - "--ping.entrypoint=health-ent"
      - "--global.checknewversion=false"
      - "--global.sendanonymoususage=false"
      - "--certificatesresolvers.msul-letsencrypt.acme.email=LIB.DL.DDaS@msu.edu"
      - "--certificatesresolvers.msul-letsencrypt.acme.storage=/etc/traefik/acme.json"
      - "--certificatesresolvers.msul-letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.msul-letsencrypt.acme.httpchallenge.entrypoint=msul-http-ent"
    healthcheck:
      test: >
        traefik healthcheck \
          --entrypoints.health-ent.address=127.0.0.1:8081 \
          --ping \
          --ping.entrypoint=health-ent
      interval: 30s
      timeout: 5s
      retries: 1
      start_period: 20s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
      restart_policy:
        window: 15s
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.traefik-public-traefik.loadbalancer.server.port=9999"
        # BasicAuth Middleware for restricted resources (MUST be 3rd entry in labels for CI replace to work)
        - "traefik.http.middlewares.restrict-auth.basicauth.users="
        # Redirect Middleware
        - "traefik.http.middlewares.http-redirect.redirectscheme.scheme=https"
        - "traefik.http.middlewares.http-redirect.redirectscheme.permanent=true"
        # Middleware to add /vufind to path
        - "traefik.http.middlewares.fix-prefix.replacepathregex.regex=^/(vufind/)?(.*)"
        - "traefik.http.middlewares.fix-prefix.replacepathregex.replacement=/vufind/$$2"
        # Traefik Dashboard HTTP
        - "traefik.http.routers.dashboard-http-router.entrypoints=msul-http-ent"
        - "traefik.http.routers.dashboard-http-router.middlewares=http-redirect"
        - "traefik.http.routers.dashboard-http-router.rule=\
            PathPrefix(`/dashboard`) && PathPrefix(`/api`)"
        - "traefik.http.routers.dashboard-http-router.service=api@internal"
        # Traefik Dashboard HTTPS
        - "traefik.http.routers.dashboard-https-router.entrypoints=msul-https-ent"
        - "traefik.http.routers.dashboard-https-router.middlewares=restrict-auth"
        - "traefik.http.routers.dashboard-https-router.rule=\
            PathPrefix(`/dashboard`) && PathPrefix(`/api`)"
        - "traefik.http.routers.dashboard-https-router.service=api@internal"

networks:
  public:
    name: public
    driver: overlay
    ipam:
      config:
        - subnet: 192.168.0.0/24

volumes:
  traefik:
    driver: local
