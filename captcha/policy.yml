networks:
  # Networks will get included from snippets

  academic:
    - prefixes:
      # Merit Network
      - "35.0.0.0/12"
      - "35.16.0.0/16"
      - "35.20.0.0/14"
      - "35.24.0.0/15"
      - "35.25.0.0/16"
      - "35.37.0.0/16"
      - "35.38.0.0/16"
      - "35.40.0.0/16"
      - "35.58.0.0/16"
      - "35.62.0.0/16"
      - "35.63.0.0/16"
      - "35.64.0.0/14"
      - "35.68.0.0/15"
      - "35.70.0.0/16"
      - "141.210.0.0/16"
      - "141.217.0.0/16"
      - "141.218.0.0/16"
      - "148.61.0.0/16"
      - "164.76.0.0/16"
      - "198.108.0.0/14"
      - "204.38.0.0/16"
      - "207.72.0.0/14"
  isp:
    - prefixes:
      # Comcast
      - "24.0.0.0/12"
      - "50.128.0.0/9"
      - "67.160.0.0/11"
      - "68.32.0.0/11"
      - "69.240.0.0/12"
      - "71.192.0.0/12"
      - "71.224.0.0/12"
      - "73.0.0.0/8"
      - "74.16.0.0/12"
      - "76.16.0.0/12"
      - "76.96.0.0/11"
      - "76.128.0.0/11"
      - "96.64.0.0/11"
      - "96.96.0.0/12"
      - "96.128.0.0/11"
      - "96.192.0.0/11"
      - "98.32.0.0/11"
      - "98.192.0.0/10"
      - "174.48.0.0/12"
      - "174.160.0.0/11"
      - "184.112.0.0/12"
      # Metronet
      - "46.110.0.0/16"
      - "52.144.32.0/21"
      - "52.144.112.0/21"
      - "64.131.0.0/18"
      - "69.174.128.0/19"
      - "69.174.160.0/20"
      - "104.218.144.0/21"
      - "104.254.216.0/21"
      - "139.60.120.0/21"
      - "147.92.96.0/20"
      - "149.20.176.0/21"
      - "149.154.0.0/18"
      - "152.117.64.0/18"
      - "162.211.32.0/21"
      - "162.221.216.0/21"
      - "172.87.16.0/21"
      - "174.137.80.0/20"
      - "184.170.160.0/20"
      - "192.69.176.0/21"
      - "192.198.56.0/21"
      - "195.252.192.0/18"
      - "199.27.248.0/21"
      - "199.66.64.0/21"
      - "199.168.72.0/21"
      - "199.204.80.0/21"
      - "206.196.32.0/19"
      - "206.225.72.0/21"
      - "208.38.224.0/19"
      - "208.64.168.0/21"
      - "208.110.224.0/20"
      - "209.173.192.0/19"
      - "209.173.224.0/20"
      - "216.82.0.0/18"
      - "216.173.160.0/19"
      - "217.180.192.0/18"
      # AT&T
      - "12.112.0.0/13"
      - "23.112.0.0/12"
      - "32.0.0.0/9"
      - "32.128.0.0/12"
      - "32.176.0.0/13"
      - "32.224.0.0/13"
      - "32.248.0.0/13"
      - "45.16.0.0/12"
      - "63.192.0.0/12"
      - "64.160.0.0/12"
      - "65.64.0.0/13"
      - "66.120.0.0/13"
      - "66.136.0.0/13"
      - "67.112.0.0/12"
      - "68.88.0.0/13"
      - "68.120.0.0/13"
      - "68.248.0.0/13"
      - "69.144.0.0/13"
      - "69.210.128.0/17"
      - "69.211.0.0/16"
      - "69.212.0.0/14"
      - "69.216.0.0/13"
      - "70.132.64.0/18"
      - "70.132.128.0/17"
      - "70.133.0.0/16"
      - "70.134.0.0/15"
      - "70.136.0.0/13"
      - "70.144.0.0/13"
      - "70.240.128.0/17"
      - "70.241.0.0/16"
      - "70.242.0.0/15"
      - "70.244.0.0/14"
      - "70.248.0.0/15"
      - "70.250.0.0/16"
      - "70.251.0.0/18"
      - "75.3.192.0/18"
      - "75.4.0.0/14"
      - "75.8.0.0/13"
      - "75.16.0.0/14"
      - "75.20.0.0/15"
      - "75.22.0.0/17"
      - "75.22.128.0/18"
      - "75.23.0.0/16"
      - "75.24.0.0/13"
      - "75.32.0.0/13"
      - "75.40.0.0/14"
      - "75.44.0.0/16"
      - "75.45.0.0/17"
      - "75.47.192.0/18"
      - "75.48.0.0/12"
      - "76.211.64.0/18"
      - "76.211.128.0/17"
      - "76.212.0.0/14"
      - "76.216.0.0/14"
      - "76.220.0.0/15"
      - "76.222.0.0/16"
      - "76.223.192.0/18"
      - "76.224.0.0/13"
      - "76.232.0.0/14"
      - "76.236.0.0/15"
      - "76.241.128.0/17"
      - "76.242.0.0/15"
      - "76.244.0.0/14"
      - "76.248.0.0/14"
      - "99.0.0.0/13"
      - "99.8.0.0/15"
      - "99.10.64.0/18"
      - "99.10.128.0/17"
      - "99.11.0.0/16"
      - "99.12.0.0/14"
      - "99.16.0.0/12"
      - "99.32.0.0/11"
      - "99.64.0.0/13"
      - "99.72.0.0/15"
      - "99.74.0.0/16"
      - "99.75.0.0/17"
      - "99.75.128.0/18"
      - "99.87.192.0/18"
      - "99.88.0.0/13"
      - "99.96.0.0/13"
      - "99.104.0.0/16"
      - "99.105.0.0/17"
      - "99.105.192.0/18"
      - "99.106.0.0/15"
      - "99.108.0.0/14"
      - "99.112.0.0/12"
      - "99.128.0.0/13"
      - "99.136.0.0/14"
      - "99.140.0.0/16"
      - "99.157.0.0/16"
      - "99.158.0.0/15"
      - "99.160.0.0/12"
      - "99.176.0.0/14"
      - "99.180.0.0/16"
      - "99.181.0.0/18"
      - "99.181.128.0/17"
      - "99.182.0.0/15"
      - "99.184.0.0/13"
      - "104.0.0.0/12"
      - "104.48.0.0/12"
      - "104.176.0.0/12"
      - "107.128.0.0/12"
      - "107.192.0.0/11"
      - "107.224.0.0/11"
      - "108.64.0.0/11"
      - "108.144.0.0/13"
      - "108.152.0.0/14"
      - "108.192.0.0/10"
      - "162.192.0.0/12"
      - "162.224.0.0/12"
      - "166.128.0.0/13"
      - "166.136.0.0/15"
      - "166.138.0.0/16"
      - "166.170.0.0/15"
      - "166.172.0.0/14"
      - "166.176.0.0/15"
      - "166.178.0.0/16"
      - "166.179.0.0/18"
      - "166.179.64.0/19"
      - "166.179.96.0/21"
      - "166.179.104.0/22"
      - "166.183.0.0/16"
      - "166.184.0.0/13"
      - "166.192.0.0/12"
      - "166.208.0.0/15"
      - "166.212.0.0/14"
      - "166.216.0.0/14"
      - "166.220.0.0/16"
      - "172.0.0.0/12"
      - "184.128.0.0/12"

challenges:
  # Challenges will get included from snippets

  # Overriding proof-of-work to lower difficulty
  js-pow-sha256:
    runtime: js
    parameters:
      path: "js-pow-sha256"
      js-loader: load.mjs
      wasm-runtime: runtime.wasm
      wasm-runtime-settings:
        difficulty: 15
      verify-probability: 0.02

conditions:
  # Conditions will get replaced on rules AST when found as ($condition-name)
  # Conditions will get included from snippets

  is-network-academic:
    - &is-network-academic 'remoteAddress.network("academic")'

  is-network-isp:
    - &is-network-isp 'remoteAddress.network("isp")'

  is-static-asset:
    - 'path == "/apple-touch-icon.png"'
    - 'path == "/apple-touch-icon-precomposed.png"'
    - 'path.matches("^/themes/")'
    - 'path.matches("^/Cover/Show")'
    - 'path.matches("\\.(manifest|ttf|woff|woff2|jpg|jpeg|gif|png|webp|avif|svg|mp4|webm|css|js|mjs|wasm)$")'

  is-api-path:
    - 'path.matches("^/api/")'
    - 'path.matches("^/AJAX/")'
    - 'path.matches("^/OAI/")'

  is-tool-ua:
    - 'userAgent.startsWith("python-requests/")'
    - 'userAgent.startsWith("Python-urllib/")'
    - 'userAgent.startsWith("python-httpx/")'
    - 'userAgent.contains("aoihttp/")'
    - 'userAgent.startsWith("http.rb/")'
    - 'userAgent.startsWith("curl/")'
    - 'userAgent.startsWith("Wget/")'
    - 'userAgent.startsWith("libcurl/")'
    - 'userAgent.startsWith("okhttp/")'
    - 'userAgent.startsWith("Java/")'
    - 'userAgent.startsWith("Apache-HttpClient//")'
    - 'userAgent.startsWith("Go-http-client/")'
    - 'userAgent.startsWith("node-fetch/")'
    - 'userAgent.startsWith("Guzzle")'

  is-allowed-agent:
    - 'userAgent.contains("Silktide")'

  is-suspicious-crawler:
    - 'userAgent.contains("Presto/") || userAgent.contains("Trident/")'
    # Old IE browsers
    - 'userAgent.matches("MSIE ([2-9]|10|11)\\.")'
    # Old Linux browsers
    - 'userAgent.matches("Linux i[63]86") || userAgent.matches("FreeBSD i[63]86")'
    # Old Windows browsers
    - 'userAgent.matches("Windows (3|95|98|CE)") || userAgent.matches("Windows NT [1-5]\\.")'
    # Old mobile browsers
    - 'userAgent.matches("Android [1-5]\\.") || userAgent.matches("(iPad|iPhone) OS [1-9]_")'
    # Old generic browsers
    - 'userAgent.startsWith("Opera/")'
    - 'userAgent.matches("^Mozilla/[1-4]")'
    # Detected sus agents
    - 'userAgent.matches("Firefox/[0-9]{1,2}\\.")'
    - 'userAgent.matches("Firefox/1[0-1][0-9]\\.")'
    - 'userAgent.matches("Opera/[0-9]\\.")'
    - 'userAgent.matches("iPhone OS [0-9]_")'
    - 'userAgent.matches("Gecko/1[0-9][0-9][0-9]-")'
    - 'userAgent.matches("Gecko/20[4-9][0-9]-")'
    - 'userAgent.matches("Gecko/2[1-9][0-9][0-9]-")'
    - 'userAgent.matches("Gecko/[03-9][0-9][0-9][0-9]-")'
    - 'userAgent.matches("MSIE [0-9]\\.")'
    - 'userAgent.matches("Windows 9[5-8x]")'
    - 'userAgent.matches("Chrome/[0-9]{1,2}\\.")'
    - 'userAgent.matches("Chrome/11[0-9]\\.")'
    - 'userAgent.matches("Chrome/12[0-4]\\.")'
    - 'userAgent.matches("Android [1-6]\\.")'
    - 'userAgent.matches("Version/[0-9]\\.[0-9](\\.[0-9])? Safari")'
    - 'userAgent.matches("FxiOS/[0-9]{1,2}\\.")'
    - 'userAgent.matches("CriOS/[0-9]{1,2}\\.")'
    - 'userAgent.matches("PPC Mac OS X")'
    - 'userAgent.matches("Windows NT [0-9]\\.[0-9]")'
    - 'userAgent.matches("Trident [0-9]\\.[0-9]")'

# Rules are checked sequentially in order, from top to bottom.
# If a pass action is met, no further rule are checked.
rules:
  - name: allow-private-networks
    conditions:
      - *is-network-localhost
      - *is-network-private
    action: pass

  - name: allow-known-ip-ranges
    conditions:
      - '($is-network-academic)'
      - '($is-network-isp)'
    action: pass

  - name: allow-well-known-resources
    conditions:
      - '($is-well-known-asset)'
    action: pass

  - name: allow-static-resources
    conditions:
      - '($is-static-asset)'
    action: pass

  - name: desired-crawlers
    conditions:
      - *is-bot-googlebot
      - *is-bot-bingbot
      - *is-bot-duckduckbot
      - *is-bot-kagibot
      - *is-bot-qwantbot
      - *is-bot-yandexbot
    action: pass

  - name: allow-allowed-agents
    conditions:
      - '($is-allowed-agent)'
    action: pass

  - name: allow-api-calls
    conditions:
      - '($is-api-path)'
    action: pass

  - name: homesite
    conditions:
      - 'path == "/"'
    action: pass

  - name: undesired-crawlers
    conditions:
      - '($is-headless-chromium)'
      - 'userAgent.startsWith("Lightpanda/")'
      - 'userAgent.startsWith("masscan/")'
      # Typo'd opera botnet
      - 'userAgent.matches("^Opera/[0-9.]+\\.\\(")'
      # AI bullshit stuff, they do not respect robots.txt even while they read it
      # TikTok Bytedance AI training
      - 'userAgent.contains("Bytedance") || userAgent.contains("Bytespider") || userAgent.contains("TikTokSpider")'
      # Meta AI training; The Meta-ExternalAgent crawler crawls the web for use cases such as training AI models or improving products by indexing content directly.
      - 'userAgent.contains("meta-externalagent/") || userAgent.contains("meta-externalfetcher/") || userAgent.contains("FacebookBot")'
      # Anthropic AI training and usage
      - 'userAgent.contains("ClaudeBot") || userAgent.contains("Claude-User")|| userAgent.contains("Claude-SearchBot")'
      # Common Crawl AI crawlers
      - 'userAgent.contains("CCBot")'
      # ChatGPT AI crawlers https://platform.openai.com/docs/bots
      - 'userAgent.contains("GPTBot") || userAgent.contains("OAI-SearchBot") || userAgent.contains("ChatGPT-User")'
      # Other AI crawlers
      - 'userAgent.contains("Amazonbot") || userAgent.contains("Google-Extended") || userAgent.contains("PanguBot") || userAgent.contains("AI2Bot") || userAgent.contains("Diffbot") || userAgent.contains("cohere-training-data-crawler") || userAgent.contains("Applebot-Extended")'
      # SEO / Ads and marketing
      - 'userAgent.contains("BLEXBot")'
      # Previously detected badly behaved bots; (?i) = case insensitive match
      - 'userAgent.matches("(?i)(AcademicBotRTU|GoogleOther|FriendlyCrawler|SemrushBot|Diffbot|HawaiiBot|DataForSeoBot)")'
    action: drop

  - name: anonymous-crawlers
    conditions:
      # No user agent set
      - 'userAgent == ""'
    action: deny

  - name: suspicious-crawlers
    conditions: ['($is-suspicious-crawler)']
    action: none
    children:
      - name: 0
        action: check
        settings:
          challenges: [js-refresh]
      - name: 1
        action: check
        settings:
          challenges: [js-pow-sha256]
      - name: 2
        action: check
        settings:
          challenges: [preload-link, resource-load]
      - name: 3
        action: check
        settings:
          challenges: [header-refresh]

  - name: suspicious-fetchers
    action: check
    settings:
      challenges: [js-refresh]
    conditions:
      - 'userAgent.contains("facebookexternalhit/") || userAgent.contains("facebookcatalog/")'

  # Allow PUT/DELETE/PATCH/POST requests in general
  - name: non-get-request
    action: pass
    conditions:
      - '!(method == "HEAD" || method == "GET")'

  - name: plaintext-browser
    action: challenge
    settings:
      challenges: [meta-refresh, cookie]
    conditions:
      - 'userAgent.startsWith("Lynx/")'
      - 'userAgent.startsWith("Links ")'

  # rules for tools like python requests or PHP Guzzle
  - name: standard-tools
    action: challenge
    settings:
      challenges: [cookie]
    conditions:
      - '($is-tool-ua)'

  - name: standard-browser
    action: challenge
    settings:
      challenges: [preload-link, meta-refresh, resource-load, js-refresh]
    conditions:
      - '($is-generic-browser)'

# If end of rules is reached, default is PASS
