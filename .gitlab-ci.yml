stages:
  - test
  - Build
  - Deploy
  - Deploy Prod
  - Deploy Build Envs
  - Cleanup
  - Release

variables:
  VUFIND_VERSION: "9.1"
  SIMPLESAMLPHP_VERSION: "2.1.1"
  DEPLOY_HOST_A: catalog-1.aws.lib.msu.edu
  DEPLOY_HOST_B: catalog-2.aws.lib.msu.edu
  DEPLOY_HOST_C: catalog-3.aws.lib.msu.edu
  COMPOSE_PATH: /home/deploy/$STACK_NAME

Set Stack Name:
  stage: test
  environment:
    name: $CI_COMMIT_BRANCH
    url: $URL
    on_stop: Remove Environment
  interruptible: true
  timeout: 2m
  variables:
    PROD: "false"
  tags:
    - msul-shared
  rules:
    - if: '($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH ||  $CI_COMMIT_BRANCH == "catalog-preview" || $CI_COMMIT_BRANCH =~ /^devel-/ || $CI_COMMIT_BRANCH =~ /^review-/) && $PROD == "false"'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $PROD == "true"'
      when: manual
  before_script:
    - apk add --no-cache bash
  script:
    - bash ./cicd/set-stack-name
  artifacts:
    reports:
      dotenv: build.env

Create DNS:
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH/create-dns
    auto_stop_in: 2 weeks
  image: $CI_REGISTRY_IMAGE/ansible:latest
  rules:
    - if: '($CI_COMMIT_BRANCH =~ /^devel-/ || $CI_COMMIT_BRANCH =~ /^review-/) && $CI_PIPELINE_SOURCE != "schedule"'
  needs:
    - job: Set Stack Name
      artifacts: true
  script:
    - ./cicd/create-dns

Deploy Compose Files:
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH/deploy-compose
    auto_stop_in: 2 weeks
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_DEPLOY_FREEZE == null && $CI_PIPELINE_SOURCE != "schedule"'
    - if: '$CI_COMMIT_BRANCH =~ /^devel-/ || $CI_COMMIT_BRANCH =~ /^review-/ ||  $CI_COMMIT_BRANCH == "catalog-preview"'
  needs:
    - job: Set Stack Name
      artifacts: true
  script:
    - bash ./cicd/deploy-compose-files

Initialize Log Dirs:
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH/init-logs
    auto_stop_in: 2 weeks
  script:
     - bash ./cicd/initialize-log-dirs

Deploy Internal Network:
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH/deploy-network
    auto_stop_in: 2 weeks
  script:
    - bash ./cicd/deploy-internal-network
  needs:
    - Deploy Compose Files
    - job: Set Stack Name
      artifacts: true

Bootstrap Stacks:
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH/bootstrap
    auto_stop_in: 2 weeks
  needs:
    - job: Set Stack Name
      artifacts: true
    - Deploy Compose Files
    - Deploy Internal Network
    - Build DB Image
    - Build Solr Image
  script:
    - bash ./cicd/bootstrap-stacks

Deploy ZK:
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH/deploy-zk
    auto_stop_in: 2 weeks
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_DEPLOY_FREEZE == null && $CI_PIPELINE_SOURCE != "schedule"'
    - if: '$CI_COMMIT_BRANCH =~ /^devel-/ || $CI_COMMIT_BRANCH =~ /^review-/ ||  $CI_COMMIT_BRANCH == "catalog-preview"'
  needs:
    - job: Set Stack Name
      artifacts: true
    - Build ZK Image
    - Bootstrap Stacks
    - Deploy Compose Files
    - Deploy Internal Network
    - Initialize Log Dirs
  script:
    - bash ./cicd/deploy-zk

Deploy Solr:
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH/deploy-solr
    auto_stop_in: 2 weeks
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_DEPLOY_FREEZE == null && $CI_PIPELINE_SOURCE != "schedule"'
    - if: '$CI_COMMIT_BRANCH =~ /^devel-/ || $CI_COMMIT_BRANCH =~ /^review-/ ||  $CI_COMMIT_BRANCH == "catalog-preview"'
  needs:
    - job: Set Stack Name
      artifacts: true
    - Build Solr Image
    - Deploy ZK
    - Bootstrap Stacks
    - Deploy Compose Files
    - Deploy Internal Network
    - Initialize Log Dirs
  script:
    - bash ./cicd/deploy-solr

Deploy DB:
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH/deploy-db
    auto_stop_in: 2 weeks
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_DEPLOY_FREEZE == null && $CI_PIPELINE_SOURCE != "schedule"'
    - if: '$CI_COMMIT_BRANCH =~ /^devel-/ || $CI_COMMIT_BRANCH =~ /^review-/ ||  $CI_COMMIT_BRANCH == "catalog-preview"'
  needs:
    - job: Set Stack Name
      artifacts: true
    - Build DB Image
    - Bootstrap Stacks
    - Deploy Compose Files
    - Deploy Internal Network
    - Initialize Log Dirs
  script:
    - bash ./cicd/deploy-db

Deploy Vufind:
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH/deploy-vufind
    auto_stop_in: 2 weeks
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_DEPLOY_FREEZE == null && $CI_PIPELINE_SOURCE != "schedule"'
    - if: '$CI_COMMIT_BRANCH =~ /^devel-/ || $CI_COMMIT_BRANCH =~ /^review-/ ||  $CI_COMMIT_BRANCH == "catalog-preview"'
  needs:
    - job: Set Stack Name
      artifacts: true
    - Deploy Internal Network
    - Build Vufind Image
    - Deploy DB
    - Deploy Solr
    - Deploy Compose Files
  script:
    - bash ./cicd/deploy-vufind
  artifacts:
    reports:
      dotenv: deploy.env

Deploy Vufind Build Env:
  extends: .stack_template
  stage: Deploy Build Envs
  environment:
    name: $CI_COMMIT_BRANCH/deploy-buildenv
    auto_stop_in: 2 weeks
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_DEPLOY_FREEZE == null && $CI_PIPELINE_SOURCE != "schedule"'
      when: manual
    - if: '$CI_COMMIT_BRANCH =~ /^devel-/ || $CI_COMMIT_BRANCH =~ /^review-/ ||  $CI_COMMIT_BRANCH == "catalog-preview"'
      when: manual
  needs:
    - job: Set Stack Name
      artifacts: true
    - Deploy Vufind
  script:
    - bash ./cicd/deploy-vufind-build
  artifacts:
    reports:
      dotenv: deploy.env

Deploy Monitoring:
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH/deploy-monitoring
    auto_stop_in: 2 weeks
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_DEPLOY_FREEZE == null && $CI_PIPELINE_SOURCE != "schedule"'
    - if: '$CI_COMMIT_BRANCH =~ /^devel-/ || $CI_COMMIT_BRANCH =~ /^review-/ ||  $CI_COMMIT_BRANCH == "catalog-preview"'
  needs:
    - job: Set Stack Name
      artifacts: true
    - Build Monitoring Image
    - Deploy Compose Files
    - Deploy Internal Network
  script:
    - bash ./cicd/deploy-monitoring

Verify Stack Health:
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH/verify
    auto_stop_in: 2 weeks
  timeout: 20m
  needs:
    - job: Set Stack Name
      artifacts: true
    - Deploy Monitoring
    - Deploy Vufind
  script:
    - bash ./cicd/verify-stack-health

Populate Vufind Environment:
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH/populate
    auto_stop_in: 2 weeks
  timeout: 10m
  rules:
    - if: '($CI_COMMIT_BRANCH =~ /^devel-/ || $CI_COMMIT_BRANCH =~ /^review-/) && $CI_PIPELINE_SOURCE != "schedule"'
  needs:
    - job: Set Stack Name
      artifacts: true
    - Deploy Vufind
  script:
    - bash ./cicd/populate-vufind-environment

Run Functional Tests:
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH/run-tests
    auto_stop_in: 2 weeks
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_DEPLOY_FREEZE == null && $CI_PIPELINE_SOURCE != "schedule"'
    - if: '$CI_COMMIT_BRANCH == "catalog-preview"'
  needs:
    - job: Set Stack Name
      artifacts: true
    - Verify Stack Health
  script:
    - bash ./cicd/run-functional-tests

Remove Environment:
  stage: Cleanup
  extends: .stack_template
  image: $CI_REGISTRY_IMAGE/ansible:latest
  environment:
    name: $CI_COMMIT_BRANCH
    action: stop
  rules:
    - if: '($CI_COMMIT_BRANCH =~ /^devel-/ || $CI_COMMIT_BRANCH =~ /^review-/) && $CI_PIPELINE_SOURCE != "schedule"'
      when: manual
  needs:
    - job: Set Stack Name
      artifacts: true
    - Deploy Vufind
  script:
    - ./cicd/remove-environment

############# Templates ###############

.stack_template:
  stage: Deploy
  tags:
    - msul-shared
  retry: 2
  interruptible: true
  timeout: 60m
  variables:
    ENCODED_PRIVATE_KEY: $DEPLOY_PRIVATE_KEY
    SERVER: $DEPLOY_HOST_A
    RUNNER_SCRIPT_TIMEOUT: 20m # Prevent job timeout when deploy script takes longer than the 5m default
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_DEPLOY_FREEZE == null && $CI_PIPELINE_SOURCE != "schedule"'
    - if: '$CI_COMMIT_BRANCH =~ /^devel-/ || $CI_COMMIT_BRANCH =~ /^review-/ ||  $CI_COMMIT_BRANCH == "catalog-preview"'
  needs:
    - job: Set Stack Name
      artifacts: true
    - Deploy Compose Files
  before_script:
    - apk add --no-cache bash || true

include:
  - 'templates/*.gitlab-ci.yml'
