stages:
  - Prepare
  - Build
# Commenting out the scanning stage for now since the Bitnami images trigger a lot of results.
# We'll add this back in when we have time to sift through all of them.
#  - test
  - Traefik
  - Bootstrap
  - Deploy
  - Cleanup
  - Tag
  - Release

variables:
  DEPLOY_HOST: catalog-a.aws.lib.msu.edu
  COMPOSE_PATH: /home/deploy/$CI_COMMIT_BRANCH

Set Stack Name:
  stage: Prepare
  script:
    - |
      STACK_NAME=
      if [[ $CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH ]]; then
          STACK_NAME="catalog-beta"
      elif [[ "${CI_COMMIT_BRANCH}" == "devel-"* || "${CI_COMMIT_BRANCH}" == "review-"* ]]; then
          STACK_NAME="${CI_COMMIT_BRANCH}"
      fi
      echo "STACK_NAME=${STACK_NAME}" > build.env
  artifacts:
    reports:
      dotenv: build.env

Create DNS:
  stage: Prepare
  needs:
    - job: Set Stack Name
      artifacts: true
  script:
    - echo "TODO - run terraform to create DNS for $STACK_NAME"

Deploy Compose Files:
  stage: Build
  extends: .stack_template
  needs:
    - job: Set Stack Name
      artifacts: true
  script:
    # Install yq
    - apk add wget
    - wget https://github.com/mikefarah/yq/releases/download/v4.26.1/yq_linux_amd64 -O ./yq
    - chmod +x ./yq
    # Modify the image tag from :latest -> $CI_COMMIT_SHORT_SHA
    - ./yq -i ".services.catalog.image=\"$CI_REGISTRY_IMAGE/vufind:$CI_COMMIT_SHORT_SHA\"" docker-compose.yml
    - ./yq -i ".services.harvest.image=\"$CI_REGISTRY_IMAGE/vufind:$CI_COMMIT_SHORT_SHA\"" docker-compose.yml
    - ./yq -i ".services.lb.image=\"$CI_REGISTRY_IMAGE/traefik-internal:$CI_COMMIT_SHORT_SHA\"" docker-compose.traefik-internal.yml
    - ./yq -i ".services.galera1.image=\"$CI_REGISTRY_IMAGE/db:$CI_COMMIT_SHORT_SHA\"" docker-compose.mariadb-bootstrap.yml
    - ./yq -i ".services.galera1.image=\"$CI_REGISTRY_IMAGE/db:$CI_COMMIT_SHORT_SHA\"" docker-compose.mariadb-galera1.yml
    - ./yq -i ".services.galera2.image=\"$CI_REGISTRY_IMAGE/db:$CI_COMMIT_SHORT_SHA\"" docker-compose.mariadb-galera2.yml
    - ./yq -i ".services.galera3.image=\"$CI_REGISTRY_IMAGE/db:$CI_COMMIT_SHORT_SHA\"" docker-compose.mariadb-galera3.yml
    - ./yq -i ".services.solr.image=\"$CI_REGISTRY_IMAGE/solr:$CI_COMMIT_SHORT_SHA\"" docker-compose.solr-cloud-bootstrap.yml
    - ./yq -i ".services.zk1.image=\"$CI_REGISTRY_IMAGE/zk:$CI_COMMIT_SHORT_SHA\"" docker-compose.solr-cloud-bootstrap.yml
    - ./yq -i ".services.zk2.image=\"$CI_REGISTRY_IMAGE/zk:$CI_COMMIT_SHORT_SHA\"" docker-compose.solr-cloud-bootstrap.yml
    - ./yq -i ".services.zk3.image=\"$CI_REGISTRY_IMAGE/zk:$CI_COMMIT_SHORT_SHA\"" docker-compose.solr-cloud-bootstrap.yml
    - ./yq -i ".services.solr.image=\"$CI_REGISTRY_IMAGE/solr:$CI_COMMIT_SHORT_SHA\"" docker-compose.solr-cloud.yml
    - ./yq -i ".services.zk1.image=\"$CI_REGISTRY_IMAGE/zk:$CI_COMMIT_SHORT_SHA\"" docker-compose.solr-cloud.yml
    - ./yq -i ".services.zk2.image=\"$CI_REGISTRY_IMAGE/zk:$CI_COMMIT_SHORT_SHA\"" docker-compose.solr-cloud.yml
    - ./yq -i ".services.zk3.image=\"$CI_REGISTRY_IMAGE/zk:$CI_COMMIT_SHORT_SHA\"" docker-compose.solr-cloud.yml
    # Modify the name of internal network to include $STACK_NAME
    - ./yq -i ".networks.internal.name=\"${STACK_NAME}-internal\"" docker-compose.traefik-internal.yml
    - ./yq -i ".services.lb.command[0]=\"--providers.docker.network=${STACK_NAME}-internal\"" docker-compose.traefik-internal.yml
    - ./yq -i ".networks.internal.name=\"${STACK_NAME}-internal\"" docker-compose.mariadb-bootstrap.yml
    - ./yq -i ".networks.internal.name=\"${STACK_NAME}-internal\"" docker-compose.mariadb-galera1.yml
    - ./yq -i ".networks.internal.name=\"${STACK_NAME}-internal\"" docker-compose.mariadb-galera2.yml
    - ./yq -i ".networks.internal.name=\"${STACK_NAME}-internal\"" docker-compose.mariadb-galera3.yml
    - ./yq -i ".networks.internal.name=\"${STACK_NAME}-internal\"" docker-compose.solr-cloud-bootstrap.yml
    - ./yq -i ".networks.internal.name=\"${STACK_NAME}-internal\"" docker-compose.solr-cloud.yml
    - ./yq -i ".networks.internal.name=\"${STACK_NAME}-internal\"" docker-compose.yml
    # Add $STACK_NAME to galera service name
    - ./yq -i ".services.galera1.labels[0]=\"traefik.tcp.services.${STACK_NAME}-msul-galera1-app.loadbalancer.server.port=3306\"" docker-compose.mariadb-bootstrap.yml
    - ./yq -i ".services.galera1.labels[0]=\"traefik.tcp.services.${STACK_NAME}-msul-galera1-app.loadbalancer.server.port=3306\"" docker-compose.mariadb-galera1.yml
    - ./yq -i ".services.galera2.labels[0]=\"traefik.tcp.services.${STACK_NAME}-msul-galera2-app.loadbalancer.server.port=3306\"" docker-compose.mariadb-galera2.yml
    - ./yq -i ".services.galera3.labels[0]=\"traefik.tcp.services.${STACK_NAME}-msul-galera3-app.loadbalancer.server.port=3306\"" docker-compose.mariadb-galera3.yml
    # Remove blank lines as a workaround for issue caused by: https://github.com/mikefarah/yq/issues/1191
    - sed -i "/^$/d" docker-compose.traefik-internal.yml
    # Copy the updated compose files to the server
    - ssh deploy@$DEPLOY_HOST mkdir -p $COMPOSE_PATH
    - scp docker-compose* deploy@$DEPLOY_HOST:$COMPOSE_PATH/

Deploy Internal Traefik:
  stage: Traefik
  extends: .stack_template
  needs:
    - job: Set Stack Name
      artifacts: true
    - Build Internal Traefik Image
    - Deploy Compose Files
  script:
    - >
      ssh deploy@$DEPLOY_HOST
      "docker login -u cicd -p $REGISTRY_ACCESS_TOKEN $CI_REGISTRY &&
      docker stack deploy --with-registry-auth -c $COMPOSE_PATH/docker-compose.traefik-internal.yml $STACK_NAME-traefik-internal && sleep 10"

Deploy Public Traefik:
  stage: Traefik
  extends: .stack_template
  needs:
    - job: Set Stack Name
      artifacts: true
    - Deploy Compose Files
  script:
    - >
      ssh deploy@$DEPLOY_HOST
      "docker login -u cicd -p $REGISTRY_ACCESS_TOKEN $CI_REGISTRY &&
      docker stack deploy -c $COMPOSE_PATH/docker-compose.traefik-public.yml traefik-public && sleep 10"

Bootstrap Stacks:
  stage: Bootstrap
  extends: .stack_template
  needs:
    - job: Set Stack Name
      artifacts: true
    - Deploy Compose Files
    - Deploy Internal Traefik
    - Build DB Image
    - Build Solr Image
  script:
    - >
      ssh deploy@$DEPLOY_HOST
      "docker login -u cicd -p $REGISTRY_ACCESS_TOKEN $CI_REGISTRY &&
      (docker stack ps ${STACK_NAME}-mariadb || (docker stack deploy --with-registry-auth -c $COMPOSE_PATH/docker-compose.mariadb-bootstrap.yml ${STACK_NAME}-mariadb && sleep 30)) &&
      (docker volume ls | grep -q ${STACK_NAME}-solr || (docker stack deploy --with-registry-auth -c $COMPOSE_PATH/docker-compose.solr-cloud-bootstrap.yml ${STACK_NAME}-solr && sleep 90))"

Deploy Solr:
  stage: Deploy
  extends: .stack_template
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" || $STACK_NAME != ""'
      changes:
        - docker-compose.solr*
        - solr/*
        - docker-compose.yml
        - vufind/*
        - zk/*
        - .gitlab-ci.yml
        - templates/*
  needs:
    - job: Set Stack Name
      artifacts: true
    - Build Solr Image
    - Build ZK Image
    - Bootstrap Stacks
    - Deploy Compose Files
    - Deploy Internal Traefik
  script:
    - >
      ssh deploy@$DEPLOY_HOST
      "docker login -u cicd -p $REGISTRY_ACCESS_TOKEN $CI_REGISTRY &&
      docker stack deploy --with-registry-auth -c $COMPOSE_PATH/docker-compose.solr-cloud.yml ${STACK_NAME}-solr"

Deploy DB:
  stage: Deploy
  extends: .stack_template
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" || $STACK_NAME != ""'
      changes:
        - docker-compose.mariadb*
        - docker-compose.yml
        - vufind/*
        - docker-compose.solr*
        - solr/*
        - zk/*
        - .gitlab-ci.yml
        - templates/*
  needs:
    - job: Set Stack Name
      artifacts: true
    - Build DB Image
    - Bootstrap Stacks
    - Deploy Compose Files
    - Deploy Internal Traefik
  script:
    - >
      ssh deploy@$DEPLOY_HOST
      "docker login -u cicd -p $REGISTRY_ACCESS_TOKEN $CI_REGISTRY &&
      docker stack deploy --with-registry-auth -c $COMPOSE_PATH/docker-compose.mariadb-galera2.yml ${STACK_NAME}-mariadb && sleep 30 &&
      docker stack deploy --with-registry-auth -c $COMPOSE_PATH/docker-compose.mariadb-galera3.yml ${STACK_NAME}-mariadb && sleep 30 &&
      docker stack deploy --with-registry-auth -c $COMPOSE_PATH/docker-compose.mariadb-galera1.yml ${STACK_NAME}-mariadb"

Deploy Vufind:
  stage: Deploy
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH
    #url: https://$STACK_NAME.aws.lib.msu.edu
    on_stop: Remove Environment
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" || $STACK_NAME != ""'
      changes:
        - docker-compose.yml
        - vufind/*
        - docker-compose.solr*
        - solr/*
        - zk/*
        - .gitlab-ci.yml
        - templates/*
  needs:
    - job: Set Stack Name
      artifacts: true
    - Deploy Public Traefik
    - Deploy Internal Traefik
    - Build Vufind Image
    - Deploy DB
    - Deploy Solr
    - Deploy Compose Files
  script:
    - >
      ssh deploy@$DEPLOY_HOST
      "docker login -u cicd -p $REGISTRY_ACCESS_TOKEN $CI_REGISTRY &&
      docker stack deploy --with-registry-auth -c $COMPOSE_PATH/docker-compose.yml $STACK_NAME-catalog"

Remove Environment:
  stage: Cleanup
  extends: .stack_template
  environment:
    name: $CI_COMMIT_BRANCH
    #url: https://$STACK_NAME.aws.lib.msu.edu
    action: stop
  rules:
    - if: '$CI_DEFAULT_BRANCH != $CI_COMMIT_BRANCH && $STACK_NAME != ""'
      when: manual
  needs:
    - job: Set Stack Name
      artifacts: true
    - Deploy Vufind
  script:
    # TODO call terraform to remove the DNS names
    - >
      ssh deploy@$DEPLOY_HOST
      "docker stack rm $STACK_NAME-solr &&
      docker stack rm $STACK_NAME-maridb &&
      docker stack rm $STACK_NAME-catalog &&
      docker stack rm $STACK_NAME-traefik-internal &&
      rm -rf $COMPOSE_PATH/$CI_COMMIT_BRANCH &&
      docker system prune --volumes -a -f"

############# Templates ###############

.stack_template:
  tags:
    - msul-shared
  extends: .setup_ssh
  variables:
    ENCODED_PRIVATE_KEY: $DEPLOY_PRIVATE_KEY
    SERVER: $DEPLOY_HOST
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" || $STACK_NAME != ""'
  needs:
    - job: Set Stack Name
      artifacts: true
    - Deploy Compose Files

include:
  - project: 'msu-libraries/ci-cd/ci-cd'
    ref: main
    file: '/templates/SSH.gitlab-ci.yml'
  - 'templates/Build.gitlab-ci.yml'
#  - 'templates/Scan.gitlab-ci.yml'
  - 'templates/Release.gitlab-ci.yml'
