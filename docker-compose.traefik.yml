---
version: "3.8"

services:
  traefik:
    image: traefik:v2.8
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik:/etc/traefik
      - logs:/mnt/logs
    networks:
      - public
    ports:
      - target: 80
        published: 80
        protocol: tcp
      - target: 443
        published: 443
        protocol: tcp
    environment:
      # XXX: The environment will be replaced by traefik-env.yml during deploy
    command: "sh -c 'GO=\"{{ index .Labels \"com.docker.stack.namespace\" | trimSuffix \"-catalog\" }}\";
      touch /mnt/logs/traefik.log; tail -f /mnt/logs/traefik.log &
      exec traefik
        --providers.docker
         --providers.docker.swarmMode=true
         --providers.docker.exposedByDefault=false
         --providers.docker.network=public
         --providers.docker.defaultRule=Host\\(\\`$GO.aws.lib.msu.edu\\`\\)
         --entrypoints.msul-http-ent.address=:80
         --entrypoints.msul-https-ent.address=:443
         --log
         --log.level=ERROR
         --log.filepath=/mnt/logs/traefik.log
         --accesslog
         --accesslog.filepath=/mnt/logs/access.log
         --api.dashboard=true
         --entrypoints.health-ent.address=:8081
         --ping
         --ping.entrypoint=health-ent
         --global.checknewversion=false
         --global.sendanonymoususage=false
         --certificatesresolvers.msul-letsencrypt.acme.email=LIB.DL.DDaS@msu.edu
         --certificatesresolvers.msul-letsencrypt.acme.storage=/etc/traefik/acme.json
         --certificatesresolvers.msul-letsencrypt.acme.httpchallenge=true
         --certificatesresolvers.msul-letsencrypt.acme.httpchallenge.entrypoint=msul-http-ent
         --certificatesresolvers.msul-letsencrypt-dns.acme.email=LIB.DL.DDaS@msu.edu
         --certificatesresolvers.msul-letsencrypt-dns.acme.storage=/etc/traefik/acme-dns.json
         --certificatesresolvers.msul-letsencrypt-dns.acme.dnschallenge=true
         --certificatesresolvers.msul-letsencrypt-dns.acme.dnschallenge.provider=route53
      '"
    healthcheck:
      test: >
        traefik healthcheck \
          --entrypoints.health-ent.address=127.0.0.1:8081 \
          --ping \
          --ping.entrypoint=health-ent
      interval: 30s
      timeout: 5s
      retries: 1
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        failure_action: rollback
      restart_policy:
        window: 15s
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.traefik-public-traefik.loadbalancer.server.port=9999"
        # BasicAuth Middleware for restricted resources
        - "traefik.http.middlewares.restrict-auth.basicauth.users=${BASICAUTH_FOR_RESOURCES}"
        # Redirect Middleware
        - "traefik.http.middlewares.http-redirect.redirectscheme.scheme=https"
        - "traefik.http.middlewares.http-redirect.redirectscheme.permanent=true"
        # Middleware to add /vufind to path
        - "traefik.http.middlewares.fix-prefix.replacepathregex.regex=^/(vufind/)?(.*)"
        - "traefik.http.middlewares.fix-prefix.replacepathregex.replacement=/vufind/$$2"
        - "traefik.http.middlewares.saml-prefix.replacepathregex.regex=^/vufind/simplesamlphp/(.*)"
        - "traefik.http.middlewares.saml-prefix.replacepathregex.replacement=/simplesamlphp/$$1"
        # Redirect to remove /vufind prefix
        - "traefik.http.middlewares.remove-prefix.redirectregex.regex=^(https://[^/]+)/vufind(/.*)"
        - "traefik.http.middlewares.remove-prefix.redirectregex.replacement=$${1}$${2}"
        - "traefik.http.middlewares.remove-prefix.redirectregex.permanent=true"
        # Traefik Dashboard HTTP
        - "traefik.http.routers.dashboard-http-router.entrypoints=msul-http-ent"
        - "traefik.http.routers.dashboard-http-router.middlewares=http-redirect"
        - "traefik.http.routers.dashboard-http-router.rule=\
            PathPrefix(`/dashboard`) || PathPrefix(`/api`)"
        - "traefik.http.routers.dashboard-http-router.service=api@internal"
        # Traefik Dashboard HTTPS
        - "traefik.http.routers.dashboard-https-router.entrypoints=msul-https-ent"
        - "traefik.http.routers.dashboard-https-router.middlewares=restrict-auth"
        - "traefik.http.routers.dashboard-https-router.tls=true"
        - "traefik.http.routers.dashboard-https-router.tls.certresolver=msul-letsencrypt"
        - "traefik.http.routers.dashboard-https-router.rule=\
            PathPrefix(`/dashboard`) || PathPrefix(`/api`) || PathPrefix(`/debug`)"
        - "traefik.http.routers.dashboard-https-router.service=api@internal"

networks:
  public:
    name: public
    driver: overlay
    ipam:
      config:
        - subnet: 192.168.0.0/24

volumes:
  traefik:
    driver: local
  logs:
    external: true
    name: "traefik_logs"
