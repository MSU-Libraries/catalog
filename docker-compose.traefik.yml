---
version: "3.8"
services:
  traefik:
    image: traefik:v2.8
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik:/etc/traefik
      - logs:/mnt/logs
    networks:
      - public
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    environment:
      # XXX: The environment will be replaced by traefik-env.yml during deploy
    command:
      - "--providers.docker"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=public"
      - '--providers.docker.defaultRule=Host(`{{ index .Labels "com.docker.stack.namespace" | trimSuffix "-catalog" }}.aws.lib.msu.edu`)'
      - "--entrypoints.msul-http-ent.address=:80"
      - "--entrypoints.msul-https-ent.address=:443"
      - "--entryPoints.msul-https-ent.forwardedHeaders.trustedIPs=10.0.0.0/16"
      - "--log"
      - "--log.level=ERROR"
      - "--log.filepath=/mnt/logs/traefik.log"
      - "--accesslog"
      - "--accesslog.filepath=/mnt/logs/access.log"
      - "--api.dashboard=true"
      #- "--api.debug=true"     # Enable this line to use Traefik's /debug
      - "--entrypoints.health-ent.address=:8081"
      - "--ping"
      - "--ping.entrypoint=health-ent"
      - "--global.checknewversion=false"
      - "--global.sendanonymoususage=false"
      - "--certificatesresolvers.msul-letsencrypt.acme.email=LIB.DL.DDaS@msu.edu"
      - "--certificatesresolvers.msul-letsencrypt.acme.storage=/etc/traefik/acme.json"
      - "--certificatesresolvers.msul-letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.msul-letsencrypt.acme.httpchallenge.entrypoint=msul-http-ent"
      - "--certificatesresolvers.msul-letsencrypt-dns.acme.email=LIB.DL.DDaS@msu.edu"
      - "--certificatesresolvers.msul-letsencrypt-dns.acme.storage=/etc/traefik/acme-dns.json"
      - "--certificatesresolvers.msul-letsencrypt-dns.acme.dnschallenge=true"
      - "--certificatesresolvers.msul-letsencrypt-dns.acme.dnschallenge.provider=route53"
    healthcheck:
      test: >
        traefik healthcheck \
          --entrypoints.health-ent.address=127.0.0.1:8081 \
          --ping \
          --ping.entrypoint=health-ent
      interval: 30s
      timeout: 5s
      retries: 1
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    deploy:
      mode: global
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        failure_action: rollback
      restart_policy:
        window: 15s
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.traefik-public-traefik.loadbalancer.server.port=9999"
        # BasicAuth Middleware for restricted resources
        - "traefik.http.middlewares.restrict-auth.basicauth.users=${BASICAUTH_FOR_RESOURCES}"
        # Redirect Middleware
        - "traefik.http.middlewares.http-redirect.redirectscheme.scheme=https"
        - "traefik.http.middlewares.http-redirect.redirectscheme.permanent=true"
        # Middleware to add /vufind to path
        - "traefik.http.middlewares.fix-prefix.replacepathregex.regex=^/(vufind/)?(.*)"
        - "traefik.http.middlewares.fix-prefix.replacepathregex.replacement=/vufind/$$2"
        - "traefik.http.middlewares.saml-prefix.replacepathregex.regex=^/vufind/simplesamlphp/(.*)"
        - "traefik.http.middlewares.saml-prefix.replacepathregex.replacement=/simplesamlphp/$$1"
        # Redirect to remove /vufind prefix
        - "traefik.http.middlewares.remove-prefix.redirectregex.regex=^(https://[^/]+)/vufind(/.*)"
        - "traefik.http.middlewares.remove-prefix.redirectregex.replacement=$${1}$${2}"
        - "traefik.http.middlewares.remove-prefix.redirectregex.permanent=true"
        # Traefik Dashboard HTTP
        - "traefik.http.routers.dashboard-http-router.entrypoints=msul-http-ent"
        - "traefik.http.routers.dashboard-http-router.middlewares=http-redirect"
        - "traefik.http.routers.dashboard-http-router.rule=\
            Host(`catalog-1.aws.lib.msu.edu`,`catalog-2.aws.lib.msu.edu`,`catalog-3.aws.lib.msu.edu`)"
        - "traefik.http.routers.dashboard-http-router.service=api@internal"
        # Traefik Dashboard HTTPS
        - "traefik.http.routers.dashboard-https-router.entrypoints=msul-https-ent"
        - "traefik.http.routers.dashboard-https-router.middlewares=restrict-auth"
        - "traefik.http.routers.dashboard-https-router.tls=true"
        - "traefik.http.routers.dashboard-https-router.tls.certresolver=msul-letsencrypt-dns"
        - "traefik.http.routers.dashboard-https-router.rule=\
            Host(`catalog-1.aws.lib.msu.edu`,`catalog-2.aws.lib.msu.edu`,`catalog-3.aws.lib.msu.edu`) && \
            (PathPrefix(`/dashboard`) || PathPrefix(`/api`) || PathPrefix(`/debug`))"
        - "traefik.http.routers.dashboard-https-router.service=api@internal"

networks:
  public:
    name: public
    external: true

volumes:
  traefik:
    driver: local
  logs:
    external: true
    name: "traefik_logs"
