#!/bin/bash

source "${CI_PROJECT_DIR}"/cicd/before-script;

runhelp() {
    echo ""
    echo "Purpose: Run validation on the VuFind image"
    echo ""
    echo "Expected User-defined Variables:"
    echo "  - CURR: Image tag for the VuFind image to test"
    echo ""
    echo "Failure Scenarios:"
    echo "  - When the unit tests return a non-zero exit code"
    echo "  - When the code quality scans return a non-zero exit code"
    echo ""
}

if [[ -n "$1" || $1 == "-h" || $1 == "--help" || $1 == "help" ]]; then
    runhelp;
    exit 0;
fi

main() {
    echo "Pulling image ${CURR} for validation...";
    docker pull "${CURR}";

    echo "Running PHP unit tests";
    docker run --rm "${CURR}" vendor/bin/phing phpunitfaster -Dphpunit_extra_params=/usr/local/vufind/module/Catalog/tests/unit-tests/;
    EC=$?;

    if [[ ${EC} -ne 0 ]]; then
        echo "One or more unit tests failed.";
        exit ${EC};
    fi;
    
    echo "Running code style checks";
    docker run --rm "${CURR}" vendor/bin/phing eslint jshint phpcs-console php-cs-fixer-dryrun checkLessToSass phpstan-console;
    EC=$?;
    if [[ ${EC} -ne 0 ]]; then
        echo "One or more of the style checks failed.";
        exit ${EC};
    fi;

    echo "All validations have passed";
}

beforescript;
# or if not using beforescript be sure to add this to ensure failed commands
# fail the script: set -e
main;
