#!/bin/bash

runhelp() {
    echo ""
    echo "Purpose: Run validation on the VuFind image"
    echo ""
    echo "Expected User-defined Variables:"
    echo "  - LATEST: Image tag for the latest VuFind image to use for cache"
    echo ""
    echo "Failure Scenarios:"
    echo "  - When the unit tests return a non-zero exit code"
    echo "  - When the code quality scans return a non-zero exit code"
    echo ""
}

if [[ -n "$1" || $1 == "-h" || $1 == "--help" || $1 == "help" ]]; then
    runhelp;
    exit 0;
fi

main() {
    # Get the number of retries for this job
    apk add jq curl || apt install -y jq curl;
    RETRIES=$(curl -s --header "PRIVATE-TOKEN: ${RO_CICD_TOKEN}" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/pipelines/${CI_PIPELINE_ID}/jobs?include_retried=true" | jq "[.[] | select(.name == \"${CI_JOB_NAME}\")] | length")
    echo "${CI_JOB_NAME// /_}_retries" "${RETRIES}" >> metrics.txt 

    echo "Building image"
    DOCKER_BUILDKIT=1 docker build \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        --build-arg VUFIND_VERSION="${VUFIND_VERSION}" \
        --build-arg SOLR_URL=http://solr:8983/solr \
        --build-arg SIMPLESAMLPHP_VERSION="${SIMPLESAMLPHP_VERSION}" \
        --tag validate \
        --cache-from "${LATEST}" \
        vufind/;

    EC=$?;
    if [[ ${EC} -ne 0 ]]; then
        echo "Failed to build. Sleeping to add delay before potential retry.";
        sleep 3;
        exit ${EC};
    fi;

    echo "Running PHP unit tests and code quality scan";
    docker run --rm validate run-tests;
    EC=$?;

    if [[ ${EC} -ne 0 ]]; then
        echo "One or more unit tests or code quality tests failed. Run the following command in a VuFind container to debug";
        echo "run-tests";
        exit ${EC};
    fi;

    echo "Getting the unit test report"
    mkdir -p reports/
    docker run --rm validate "get-unittest-report" > reports/report.xml
    # Remove first line of the output (entrypoint prints)
    sed -i '1d' reports/report.xml

    echo "Getting the coverage report"
    docker run --rm validate "get-coverage-report" > reports/coverage.xml
    # Remove first line of the output (entrypoint prints)
    sed -i '1d' reports/coverage.xml
    # Replace the path with the correct relative path
    sed -i 's/\/usr\/local\/vufind/vufind/g' reports/coverage.xml

    echo "Getting the coverage summary"
    docker run --rm validate "get-coverage-summary"

    sleep 1; # Allow time for container to exit
    docker image rm validate;
    echo "All validations have passed";
}

# exit script if any command fails
set -e;
# set xtrace to show commands being run in the CI job logs
set -o xtrace
main;
