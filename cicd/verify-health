#!/bin/bash

source "${CI_PROJECT_DIR}"/cicd/before-script

runhelp() {
    echo ""
    echo "Purpose: [Script Purpose]"
    echo ""
    echo "Expected User-defined Variables:"
    echo "  - [VAR]: [Possible values and/or description of use]"
    echo ""
    echo "Failure Scenarios:"
    echo "  - [Any scenarios that will trigger a non-zero exit code]"
    echo ""
}

if [[ -n "$1" || $1 == "-h" || $1 == "--help" || $1 == "help" ]]; then
    runhelp
    exit 0
fi

checkhealth() {
    SERVICE=$1;
    echo "Checking health for ${SERVICE}...";
    for HOST in ${HOSTS}; do
        ATTEMPTS=0;
        while [[ "${ATTEMPTS}" -le 15 ]]; do
            CONTAINER=$(ssh deploy@"${HOST}" "docker ps -q -f name=${STACK_NAME}-${SERVICE}") || echo "";
            if [ -z "${CONTAINER}" ]; then
              HEALTH="No Health";
            else
              HEALTH=$(ssh deploy@"${HOST}" "docker inspect --format '{{json .State.Health.Status }}' $(docker ps -q -f name=\""${STACK_NAME}"-"${SERVICE}"\") 2>/dev/null || echo \"No Health\"") || echo "No Health";
            fi
            if [[ "${HEALTH}" == "\"healthy\"" ]]; then
                echo "$(date +'%m-%d-%Y %T %z') -- (${HOST}): ${SERVICE} is healthy."
                EC=0;
                break;
            fi
            EC=1;
            sleep 10;
            ATTEMPTS=$((ATTEMPTS+1));
        done
        if [[ ${EC} -ne 0 ]]; then
            echo "$(date +'%m-%d-%Y %T %z') -- (${HOST}): ${SERVICE} is not healthy! (actual health: ${HEALTH})";
            exit 1;
        fi
    done
}

main() {
    HOSTS="$DEPLOY_HOST_A $DEPLOY_HOST_B $DEPLOY_HOST_C";
    checkhealth mariadb_galera;
    checkhealth catalog_catalog;
    # Give solr more time before attempting since it takes longer to start cluster
    sleep 10;
    checkhealth solr_solr;
}

beforescript
main
