#!/bin/bash

source "${CI_PROJECT_DIR}"/cicd/before-script

runhelp() {
    echo ""
    echo "Purpose: Run the vufind functional tests"
    echo ""
    echo "Expected User-defined Variables:"
    echo "  - STACK_NAME: Name of the stack"
    echo "  - DEPLOY_HOST_1: The first host in the cluster"
    echo ""
    echo "Failure Scenarios:"
    echo "  - If the functional tests fail"
    echo "  - The catalog container is not online on the node"
    echo ""
}

if [[ -n "$1" || $1 == "-h" || $1 == "--help" || $1 == "help" ]]; then
    runhelp
    exit 0
fi

main() {
    echo "Finding container to run tests against for stack ${STACK_NAME}-catalog_catalog..."
    NODE=$(ssh deploy@"${DEPLOY_HOST_1}" "docker service ps -f 'desired-state=running' --format '{{ .Node }}' ${STACK_NAME}-catalog_catalog | head -n 1") || echo "";
    CONTAINER=$(ssh deploy@"${NODE}" "docker ps -q -f name=${STACK_NAME}-catalog_catalog") || echo "";

    if [ -z "${NODE}" ] || [ -z "${CONTAINER}" ] ; then
        echo "Could not find container for ${STACK_NAME}-catalog_catalog. Node: ${NODE}. Container: ${CONTAINER}";
        exit 1;
    fi;
    echo "Found container ${CONTAINER}!";

    echo "Running Vufind functional tests...";
    ssh deploy@"${NODE}" "docker exec ${CONTAINER} vendor/bin/phing phpunitfast -Dphpunit_extra_params=/usr/local/vufind/module/Catalog/tests/integration-tests/";
    EC=$?;
    echo "Tests complete with exit code ${EC}";

    # Get metrics for stage runtime
    STAGE_END=$(date +%s);
    STAGE_START=$(cat "${CI_JOB_STAGE}"_start.txt);
    STAGE_RUNTIME=$((STAGE_END-STAGE_START)); STAGE_HOURS=$((STAGE_RUNTIME / 3600)); STAGE_MINUTES=$(( (STAGE_RUNTIME % 3600) / 60 )); STAGE_SECONDS=$(( (STAGE_RUNTIME % 3600) % 60 ));
    echo "${CI_JOB_STAGE}_StageRuntime" $STAGE_HOURS:$STAGE_MINUTES:$STAGE_SECONDS >> metrics.txt;

    # Get runtime metrics
    END=$(date +%s); RUNTIME=$((END-START)); HOURS=$((RUNTIME / 3600)); MINUTES=$(( (RUNTIME % 3600) / 60 )); SECONDS=$(( (RUNTIME % 3600) % 60 ));
    echo "${CI_JOB_NAME// /_}_Runtime" "$HOURS:$MINUTES:$SECONDS" >> metrics.txt
    
    exit ${EC};
}


beforescript
main

