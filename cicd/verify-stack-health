#!/bin/bash

source "${CI_PROJECT_DIR}"/cicd/before-script

runhelp() {
    echo ""
    echo "Purpose: Verify the health of the stack by calling the check"
    echo "         scripts used by the NCPA plugin"
    echo ""
    echo "Expected User-defined Variables:"
    echo "  - STACK_NAME: Name of the stack"
    echo "  - DEPLOY_HOST_1: The first host in the cluster"
    echo "  - DEPLOY_HOST_2: The second host in the cluster"
    echo "  - DEPLOY_HOST_3: The third host in the cluster"
    echo ""
    echo "Failure Scenarios:"
    echo "  - If the NCPA plugin returns a non-zero exit code"
    echo ""
}

if [[ -n "$1" || $1 == "-h" || $1 == "--help" || $1 == "help" ]]; then
    runhelp
    exit 0
fi

check() {
    SERVICE=$1;
    HEALTHY=0;
    for HOST in ${HOSTS}; do
        ATTEMPTS=0;
        while [[ "${ATTEMPTS}" -le 60 ]]; do
            echo "$(date +'%m-%d-%Y %T %z') -- (${HOST}): Checking ${SERVICE} health...";
            if ssh deploy@"${HOST}" "/usr/local/ncpa/plugins/check_${SERVICE}.sh ${STACK_NAME}"; then
                echo "$(date +'%m-%d-%Y %T %z') -- (${HOST}): ${SERVICE} is healthy!";
                HEALTHY=1;
                break;
            fi
            echo "$(date +'%m-%d-%Y %T %z') -- (${HOST}): ${SERVICE} not healthy yet. Waiting...";
            sleep 15;
            ATTEMPTS=$((ATTEMPTS+1));
        done
        if [[ "${HEALTHY}" -ne 1 ]]; then
            echo "$(date +'%m-%d-%Y %T %z') -- (${HOST}): ${SERVICE} not healthy after max attempts. Failing job!";
            exit 1;
        fi;
    done
}

main() {
    HOSTS="$DEPLOY_HOST_1 $DEPLOY_HOST_2 $DEPLOY_HOST_3";

    echo "Run checks using the NCPA scripts"
    check solr
    check zk
    check galera
    check docker

    # Get metrics for stage runtime
    STAGE_END=$(date +%s);
    STAGE_START=$(cat "${CI_JOB_STAGE}"_start.txt);
    STAGE_RUNTIME=$((STAGE_END-STAGE_START)); STAGE_HOURS=$((STAGE_RUNTIME / 3600)); STAGE_MINUTES=$(( (STAGE_RUNTIME % 3600) / 60 )); STAGE_SECONDS=$(( (STAGE_RUNTIME % 3600) % 60 ));
    echo "${CI_JOB_STAGE}_StageRuntime" $STAGE_HOURS:$STAGE_MINUTES:$STAGE_SECONDS >> metrics.txt;

    # Get runtime metrics
    END=$(date +%s); RUNTIME=$((END-START)); HOURS=$((RUNTIME / 3600)); MINUTES=$(( (RUNTIME % 3600) / 60 )); SECONDS=$(( (RUNTIME % 3600) % 60 ));
    echo "${CI_JOB_NAME// /_}_Runtime" $HOURS:$MINUTES:$SECONDS >> metrics.txt
}

beforescript
main
