#!/bin/bash

source "${CI_PROJECT_DIR}"/cicd/before-script

runhelp() {
    echo ""
    echo "Purpose: Deploy the Vufind application stack"
    echo ""
    echo "Expected User-defined Variables:"
    echo "  - STACK_NAME: Stack name"
    echo "  - DEPLOY_HOST_1: The first host in the cluster"
    echo "  - DEPLOY_HOST_2: The second host in the cluster"
    echo "  - DEPLOY_HOST_3: The third host in the cluster"
    echo ""
    echo "Failure Scenarios:"
    echo "  - Deploying the stack fails"
    echo ""
}

if [[ -n "$1" || $1 == "-h" || $1 == "--help" || $1 == "help" ]]; then
    runhelp
    exit 0
fi

main() {
    # Pull images now to save time with stack deploy
    ssh deploy@"${DEPLOY_HOST_1}" "docker pull $CI_REGISTRY_IMAGE/vufind:${CI_COMMIT_SHORT_SHA}${EXTRA_TAG_SUFFIX}" &
    ssh deploy@"${DEPLOY_HOST_2}" "docker pull $CI_REGISTRY_IMAGE/vufind:${CI_COMMIT_SHORT_SHA}${EXTRA_TAG_SUFFIX}" &
    ssh deploy@"${DEPLOY_HOST_3}" "docker pull $CI_REGISTRY_IMAGE/vufind:${CI_COMMIT_SHORT_SHA}${EXTRA_TAG_SUFFIX}";
    wait

    ssh deploy@"${DEPLOY_HOST_1}" "docker stack deploy --with-registry-auth -c <(source ${COMPOSE_PATH}/.env; envsubst <${COMPOSE_PATH}/docker-compose.catalog.yml) ${STACK_NAME}-catalog";

    # Set URL
    URL="${SITE_HOSTNAME}";

    # Report the environemnt URL to GitLab
    echo "URL=${URL}" >> deploy.env;

    # Get runtime metrics
    END=$(date +%s); RUNTIME=$((END-START)); HOURS=$((RUNTIME / 3600)); MINUTES=$(( (RUNTIME % 3600) / 60 )); SECONDS=$(( (RUNTIME % 3600) % 60 ));
    echo "${CI_JOB_NAME// /_}_Runtime" $HOURS:$MINUTES:$SECONDS >> metrics.txt
}

beforescript
main
