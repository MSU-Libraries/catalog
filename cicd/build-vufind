#!/bin/bash

runhelp() {
    echo ""
    echo "Purpose: Build the Vufind image"
    echo ""
    echo "Expected User-defined Variables:"
    echo "  - LATEST: Image tag for the latest image to use as cache"
    echo "  - CURR: Image tag for current image"
    echo "  - COMPONENT: Component name (context for the build)"
    echo "  - VUFIND_VERSION: The current version of Vufind"
    echo "  - Many other build Args: Documented in technical documentation"
    echo "    https://msu-libraries.github.io/catalog/CICD/#variables"
    echo ""
    echo "Failure Scenarios:"
    echo "  - If the build fails"
    echo "  - If the push fails"
    echo ""
}

if [[ -n "$1" || $1 == "-h" || $1 == "--help" || $1 == "help" ]]; then
    runhelp
    exit 0
fi

main() {
    echo "Building image"
    DOCKER_BUILDKIT=1 docker build \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        --build-arg GITHUB_USER_TOKEN="${GITHUB_USER_TOKEN}" \
        --build-arg VUFIND_VERSION="${VUFIND_VERSION}" \
        --build-arg SOLR_URL=http://solr:8983/solr \
        --build-arg SIMPLESAMLPHP_VERSION="${SIMPLESAMLPHP_VERSION}" \
        --tag "${CURR}" \
        --cache-from "${LATEST}" \
        vufind/;

    EC=$?;
    if [[ ${EC} -ne 0 ]]; then
        echo "Failed to build. Sleeping to add delay before potential retry.";
        sleep 3;
        exit ${EC};
    fi;

    echo "Pushing image"
    docker push "${CURR}";

    EC=$?;
    if [[ ${EC} -ne 0 ]]; then
        echo "Failed to push. Sleeping to add delay before potential retry.";
        sleep 3;
        exit ${EC};
    fi;

    if [[ ${CI_DEFAULT_BRANCH} == "${CI_COMMIT_BRANCH}" || ${CI_COMMIT_BRANCH} == "catalog-preview" ]]; then
        echo "Pushing new unique main image tag"
        docker tag "${CURR}" "${CURR}-main";
        docker push "${CURR}-main";
        echo "Pushing new image with :latest tag"
        docker tag "${CURR}" "${LATEST}";
        docker push "${LATEST}";
    fi

    EC=$?;
    if [[ ${EC} -ne 0 ]]; then
        echo "Failed to add latest tag. Sleeping to add delay before potential retry.";
        sleep 3;
        exit ${EC};
    fi;
}

# exit script if any command fails
set -e;
# set xtrace to show commands being run in the CI job logs
set -o xtrace
main;
